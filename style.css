* {
  box-sizing: border-box;
  font-family: sans-serif;
}

.autocomplete {
  /*the container must be positioned relative:*/
  position: relative;
  display: inline-block;
}

.autocomplete-items {
  position: absolute;
  border: 1px solid #d4d4d4;
  border-bottom: none;
  border-top: none;
  z-index: 99;
  /*position the autocomplete items to be the same width as the container:*/
  top: 100%;
  left: 0;
  right: 0;
}
.autocomplete-items div {
  padding: 10px;
  cursor: pointer;
  background-color: #fff;
  border-bottom: 1px solid #d4d4d4;
}
.autocomplete-items div:hover {
  /*when hovering an item:*/
  background-color: #e9e9e9;
}
.autocomplete-active {
  /*when navigating through the items using the arrow keys:*/
  background-color: DeepSkyBlue !important;
  color: #ffffff;
}

input[type=text] {
  border: 1px solid transparent;
  background-color: AliceBlue;
  padding: 5px;
  font-size: 14px;
}

button {
  border: 1px solid transparent;
  padding: 5px;
  background-color: DeepSkyBlue;
  color: #fff;
  font-size: 14px;
}

/* Style the list (remove margins and bullets, etc) */
ul {
  list-style-type: none;
  padding: 0;
  margin: 0;
}

/* Style the list items */
ul li {
  border: 1px solid #ddd;
  margin-top: -1px; /* Prevent double borders */
  background-color: AliceBlue;
  padding: 12px;
  text-decoration: none;
  color: black;
  display: block;
  position: relative;
}

/* Add a light grey background color on hover */
ul li:hover {
  background-color: #eee;
}

/* Style the close button (span) */
.close {
  cursor: pointer;
  position: absolute;
  top: 50%;
  right: 0%;
  padding: 12px 16px;
  transform: translate(0%, -50%);
}

p {
  white-space: pre-line;
}

.close:hover {background: #bbb;}